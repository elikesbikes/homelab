---
- name: Install Files for dotfiles
  hosts: all
  become: yes

  vars:
    github_repo_url: "https://github.com/elikesbikes/linux_dotfiles"
    local_clone_path: "/tmp/git-ecloaiza"

  tasks:
    - name: Install dependencies
      package:
        name: "{{ item }}"
        state: present
      loop:
        - wget
        - unzip

    - name: Check if EXA exists
      stat:
        path: /usr/local/bin/bin/exa
      register: file_stat

    - name: Download exa      
      command: "curl -fLo /tmp/exa.zip https://github.com/ogham/exa/releases/download/v0.10.0/exa-linux-x86_64-v0.10.0.zip"
      when: not file_stat.stat.exists   

    - name: Unzip exa
      unarchive:
        src: /tmp/exa.zip
        dest: /usr/local/bin
        remote_src: yes
        creates: /usr/local/bin/exa
        


    - name: Make exa executable
      file:
        path: /usr/local/bin/bin/exa
        mode: '+x'

    - name: Install direnv (RHEL/CentOS)
      become: yes
      shell: curl -sfL https://direnv.net/install.sh | bash
      args:
        creates: /usr/local/bin/direnv
      when: ansible_pkg_mgr == 'yum'


    - name: Install dependencies for YADM
      package:
        name: "{{ item }}"
        state: present
      loop:
        - git
        - curl

    - name: Check if YADM exists
      stat:
        path: /usr/local/bin/yadm
      register: file_stat

    - name: Download YUDM    
      command: "curl -fLo /usr/local/bin/yadm https://github.com/TheLocehiliosan/yadm/raw/master/yadm"
      when: not file_stat.stat.exists  
        
    - name: Make YUDM executable
      file:
        path: /usr/local/bin/yadm
        mode: '+x'

    - name: Install epel-release package (required for CentOS)
      package:
        name: epel-release
        state: present
      when: ansible_os_family == 'RedHat'  # Check if the OS is RedHat based (CentOS)

    - name: Install neofetch
      package:
        name: neofetch
        state: present

    - name: Check if the repository directory exists
      stat:
        path: "{{ local_clone_path }}"
      register: repo_dir

    - name: Clone YADM repository
      become: yes
      git:
        repo: "{{ github_repo_url }}"
        dest: "{{ local_clone_path }}"      
        clone: yes
      when: not repo_dir.stat.exists

#    - name: Delete a file
#      file:
#        path: /home/ecloaiza/.bashrc
#        state: absent
#     - name: Ensure directory is absent
#      file:
#        become: yes
#        path: "/tmp/git-ecloaiza/"
#        state: absent
#        recurse: yes  # This ensures the directory and its contents are recursively removed


    - name: Find all files
      ansible.builtin.find:
        paths: "{{ local_clone_path }}" 
        recurse: yes
        file_type: file
      register: files_to_move

    - name: Move files for CLone Repository
      ansible.builtin.shell:
        cmd: mv "{{ item.path }}" /home/ecloaiza/
      with_items: "{{ files_to_move.files }}"

    - name: Move file
      ansible.builtin.shell:
        cmd: mv "/tmp/git-ecloaiza/.bashrc" /home/ecloaiza/

    - name: Install required packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - curl

    - name: Install Starship
      shell: curl -fsSL https://starship.rs/install.sh | bash -s -- -y